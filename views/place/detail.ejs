<% layout('layouts/app') %>
<div class="row p-5">
  <div class="col-md-6">
    <div class="card mb-5">
      <div id="carouselExampleIndicators" class="carousel carousel-dark slide" data-bs-ride="carousel">
        <div class="carousel-indicators">
          <% place.images.forEach((image,index) => { %>
          <button type="button" data-bs-target="#carouselExampleIndicators" data-bs-slide-to="<%= index %>" class="active" aria-current="true" aria-label="Slide 1"></button>
          <% }) %>
        </div>
        <div class="carousel-inner">
          <% place.images.forEach((image,index) => { %>
            <div class="carousel-item <%= index === 0 ? "active":'' %>" data-bs-interval="5000  ">
            <img
              src="/images/<%= image.filename %>"
              class="img-fluid d-block w-100"
              alt="<%= place.title %>"
            />
          </div>
          <% }) %>
        </div>
        <% if(place.images.length > 1){ %>
        <button
          class="carousel-control-prev"
          type="button"
          data-bs-target="#carouselExampleIndicators"
          data-bs-slide="prev"
        >
          <span class="carousel-control-prev-icon" aria-hidden="true"></span>
          <span class="visually-hidden">Previous</span>
        </button>
        <button
          class="carousel-control-next"
          type="button"
          data-bs-target="#carouselExampleIndicators"
          data-bs-slide="next"
        >
          <span class="carousel-control-next-icon" aria-hidden="true"></span>
          <span class="visually-hidden">Next</span>
        </button>
        <% } %>
      </div>
      <ul class="list-group list-group-flush">
        <li class="list-group-item">
          <%= place.title %>
          <p class="text-secondary"><%= place.description %></p>
        </li>
        <li class="list-group-item"><%= place.location %></li>
        <li class="list-group-item">
          Author: <u><%= place.author.username %></u>
        </li>
        <li class="list-group-item">Rp.<%= place.price %></li>
        <% if(currentUser && place.author.equals(currentUser._id)) {%>
        <li class="list-group-item">
          <form
            action="/places/delete/<%= place._id %>?_method=delete"
            method="post"
            class="d-inline"
          >
            <button type="submit" class="btn btn-danger">Delete</button>
          </form>
          <a
            href="/places/edit/<%= place._id %>"
            class="btn btn-warning text-white"
            >Edit</a
          >
        </li>
        <% } %>
      </ul>
    </div>
  </div>
  <div class="col-md-6">
    <div style="width: 550px; height: 280px ;margin: 0 0 2rem 0" id="mapContainer"></div>
    <% if(currentUser) {%>
    <h2>Leave a Comment And Rating</h2>
    <form
      action="/places/<%= place._id %>/review"
      method="post"
      class="validate-form"
      novalidate
    >
      <div>
        <label for="rating" class="form-label">Rating Place</label>
        <fieldset class="starability-basic">
          <input
            type="radio"
            id="no-rate"
            class="input-no-rate"
            name="review[rating]"
            value="0"
            checked
            aria-label="No rating."
          />
          <input
            type="radio"
            id="first-rate1"
            name="review[rating]"
            value="1"
          />
          <label for="first-rate1" title="Terrible">1 star</label>
          <input
            type="radio"
            id="first-rate2"
            name="review[rating]"
            value="2"
          />
          <label for="first-rate2" title="Not good">2 stars</label>
          <input
            type="radio"
            id="first-rate3"
            name="review[rating]"
            value="3"
          />
          <label for="first-rate3" title="Average">3 stars</label>
          <input
            type="radio"
            id="first-rate4"
            name="review[rating]"
            value="4"
          />
          <label for="first-rate4" title="Very good">4 stars</label>
          <input
            type="radio"
            id="first-rate5"
            name="review[rating]"
            value="5"
          />
          <label for="first-rate5" title="Amazing">5 stars</label>
        </fieldset>
        <div class="valid-feedback">Looks good!</div>
        <div class="invalid-feedback">Please fill out this field.</div>
      </div>
      <div>
        <label for="comment" class="form-label">Comment</label>
        <textarea
          name="review[body]"
          id="comment"
          cols="30"
          rows="5"
          class="form-control"
          required
        ></textarea>
        <div class="valid-feedback">Looks good!</div>
        <div class="invalid-feedback">Please fill out this field.</div>
      </div>
      <button type="submit" class="btn btn-primary mt-4">Send</button>
    </form>
    <hr />
    <% } %>
    <h3>Comments:</h3>
    <%if(place.reviews.length > 0){%> <% for(const review of place.reviews){ %>
    <div class="card text-start my-3">
      <div class="card-body">
        <p class="starability-result" data-rating="<%= review.rating %>">
          Rated: <%= review.rating %> stars
        </p>
        <p class="card-text"><%= review.body %></p>
        <form
          action="/places/delete/<%= place._id %>/review/<%= review._id %>?_method=delete"
          method="post"
        >
          <% if(currentUser && review.author.equals(currentUser._id)){%>
          <button type="submit" class="btn btn-danger btn-sm">
            Delete komen
          </button>
          <% } %>
        </form>
      </div>
    </div>
    <% } }else{ %>
    <div class="text-start my-3">
      <p class="text-secondary text-center">Belum ada komentar</p>
    </div>
    <% } %>
  </div>
</div>
<script>
  // Assuming `place` is available in the EJS template
  const place = <%- JSON.stringify(place) %>;
  const placeLocation = { lng: place.geometry.coordinates[1], lat: place.geometry.coordinates[0] };

  function addMarker(group, coordinates, html) {
    const svgMarkup = `<svg width="50px" height="50px" viewBox="0 0 24 24" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns="http://www.w3.org/2000/svg" version="1.1" xmlns:cc="http://creativecommons.org/ns#" xmlns:dc="http://purl.org/dc/elements/1.1/">
      <g transform="translate(0 -1028.4)">
       <path d="m12 0c-4.4183 2.3685e-15 -8 3.5817-8 8 0 1.421 0.3816 2.75 1.0312 3.906 0.1079 0.192 0.221 0.381 0.3438 0.563l6.625 11.531 6.625-11.531c0.102-0.151 0.19-0.311 0.281-0.469l0.063-0.094c0.649-1.156 1.031-2.485 1.031-3.906 0-4.4183-3.582-8-8-8zm0 4c2.209 0 4 1.7909 4 4 0 2.209-1.791 4-4 4-2.2091 0-4-1.791-4-4 0-2.2091 1.7909-4 4-4z" transform="translate(0 1028.4)" fill="#e74c3c"/>
       <path d="m12 3c-2.7614 0-5 2.2386-5 5 0 2.761 2.2386 5 5 5 2.761 0 5-2.239 5-5 0-2.7614-2.239-5-5-5zm0 2c1.657 0 3 1.3431 3 3s-1.343 3-3 3-3-1.3431-3-3 1.343-3 3-3z" transform="translate(0 1028.4)" fill="#c0392b"/>
      </g>
     </svg>`


      const icon = new H.map.Icon(svgMarkup);
      const marker = new H.map.Marker(coordinates, { icon: icon });
      marker.setData(html);
      group.addObject(marker);
  }

  function addInfoBubble(map) {
      const group = new H.map.Group();
      map.addObject(group);

      group.addEventListener('tap', (e) => {
          const target = e.target;
          if (target instanceof H.map.Marker) {
              const bubble = new H.ui.InfoBubble(target.getGeometry(), {
                  content: target.getData()
              });
              ui.addBubble(bubble);
          } else {
              console.log('Event target is not a marker:', target);
          }
      }, false);

      addMarker(group, placeLocation, `<div>${place.title}</div><div>${place.description}</div>`);
  }

  // Initialize the platform object
  const platform = new H.service.Platform({
      'apikey': 'YOUR_API_KEY' // Replace with your HERE API key
  });

  // Obtain the default map types from the platform object
  const defaultLayers = platform.createDefaultLayers();

  // Instantiate (and display) the map
  const map = new H.Map(
      document.getElementById('mapContainer'),
      defaultLayers.vector.normal.map,
      {
          zoom: 10,
          center: placeLocation
      });

  const ui = H.ui.UI.createDefault(map, defaultLayers);
  const behavior = new H.mapevents.Behavior(new H.mapevents.MapEvents(map));

  addInfoBubble(map);
</script>